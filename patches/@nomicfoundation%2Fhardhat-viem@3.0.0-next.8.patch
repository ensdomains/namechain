diff --git a/dist/src/internal/clients.js b/dist/src/internal/clients.js
index 5bb66aa71cf0b972a10b56f176cf945c7d39796d..064ec3983bf5b1d02abbfa75e8aa9c6f26ec14a8 100644
--- a/dist/src/internal/clients.js
+++ b/dist/src/internal/clients.js
@@ -1,8 +1,8 @@
-import { HardhatError } from "@nomicfoundation/hardhat-errors";
-import { createPublicClient, createWalletClient, createTestClient, custom as customTransport, } from "viem";
-import { publicActionsL2, walletActionsL2 } from "viem/op-stack";
-import { getAccounts } from "./accounts.js";
-import { getChain, getMode, isDevelopmentNetwork } from "./chains.js";
+import { HardhatError } from "@nomicfoundation/hardhat-errors"
+import { createPublicClient, createTestClient, createWalletClient, custom as customTransport, } from "viem"
+import { publicActionsL2, walletActionsL2 } from "viem/op-stack"
+import { getAccounts } from "./accounts.js"
+import { getChain, getMode, isDevelopmentNetwork } from "./chains.js"
 export async function getPublicClient(provider, chainType, publicClientConfig) {
     const chain = publicClientConfig?.chain ?? (await getChain(provider, chainType));
     const parameters = {
@@ -11,7 +11,7 @@ export async function getPublicClient(provider, chainType, publicClientConfig) {
     };
     let publicClient = createPublicClient({
         chain,
-        transport: customTransport(provider),
+        transport: customTransport(provider, { retryCount: 0 }),
         ...parameters,
     });
     if (chainType === "optimism") {
@@ -31,7 +31,7 @@ export async function getWalletClients(provider, chainType, walletClientConfig)
     let walletClients = accounts.map((account) => createWalletClient({
         chain,
         account,
-        transport: customTransport(provider),
+        transport: customTransport(provider, { retryCount: 0 }),
         ...parameters,
     }));
     if (chainType === "optimism") {
@@ -50,7 +50,7 @@ export async function getWalletClient(provider, chainType, address, walletClient
     let walletClient = createWalletClient({
         chain,
         account: address,
-        transport: customTransport(provider),
+        transport: customTransport(provider, { retryCount: 0 }),
         ...parameters,
     });
     if (chainType === "optimism") {
@@ -77,7 +77,7 @@ export async function getTestClient(provider, chainType, testClientConfig) {
     const testClient = createTestClient({
         chain,
         mode,
-        transport: customTransport(provider),
+        transport: customTransport(provider, { retryCount: 0 }),
         ...parameters,
     });
     return testClient;
